name: Deploy Next.js to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Diperbarui ke versi v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20-lts'  # SonarCloud rekomendasikan nodejs 20 LTS

      - name: Install dependencies
        run: npm ci  # Gunakan npm ci untuk kecepatan dan keandalan

      - name: Build Next.js project
        run: npm run build

      - name: Save build output as artifact (v4)
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: ./.next  # Simpan direktori .next sebagai artifact

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      chrome:
        image: docker://brightsec/chrome-cypress:latest
        options: --headless

    steps:
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout repository
        uses: actions/checkout@v4  # Diperbarui ke versi v4

      - name: Install dependencies
        run: npm ci

      - name: Download build artifact (v4)
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .

      - name: Install Cypress dependencies
        run: npm install cypress --save-dev

      - name: Run Cypress tests
        run: npx cypress run --headless
        env:
          CI: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Diperbarui ke versi v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20-lts'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel
        run: npx vercel deploy --prod --yes --token ${{ secrets.VERCEL_TOKEN }}

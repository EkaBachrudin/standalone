name: Next.js with Cypress

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CYPRESS_SLOW_MO: 0
  CYPRESS_BASE_URL: ${{ secrets.NEXT_BASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js
        run: npm run build

      # Pastikan file .next ada, lihat ls jika perlu
      - name: List .next directory
        run: ls -la ./.next
        if: stepsnpm install is needed?        
          
      # Upload direktori .next secara langsung
      - name: Upload .next directory
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: ./.next

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      chrome:
        image: docker://brightsec/chrome-cypress:latest
        options: --headless

    steps:
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      # Download direktori .next dari artifacts
      - name: Download .next directory
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: ./

      - name: Run Cypress tests
        run: |
          # Tampilkan informasi test directory
          ls -la ./.next/cypress
          # Jalankan test
          npx cypress run --headless
        env:
          CI: true
          BASE_URL: ${{ secrets.NEXT_BASE_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel
        run: npx vercel deploy --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
